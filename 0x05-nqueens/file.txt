Starting N-Queens Solution

Cleared SolMap for new initial row: 0

Attempting position (0, 0) in row 0

=== possible ===
Checking if position (0, 0) is possible
Current attack positions in SolMap: []
Position (0, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (0, 0)
Updated SolMap for pos (0, 0): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]}
Added position (0, 0) to solution: [(0, 0)]

Attempting position (1, 0) in row 1

=== possible ===
Checking if position (1, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
Position (1, 0) is not possible
Skipping position (1, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]}

Attempting position (1, 1) in row 1

=== possible ===
Checking if position (1, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
Position (1, 1) is not possible
Skipping position (1, 1) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]}

Attempting position (1, 2) in row 1

=== possible ===
Checking if position (1, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
Position (1, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 2)
Updated SolMap for pos (1, 2): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}
Added position (1, 2) to solution: [(0, 0), (1, 2)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 4)
Updated SolMap for pos (2, 4): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}
Added position (2, 4) to solution: [(0, 0), (1, 2), (2, 4)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 1)
Updated SolMap for pos (3, 1): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}
Added position (3, 1) to solution: [(0, 0), (1, 2), (2, 4), (3, 1)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 3)
Updated SolMap for pos (4, 3): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)], '(4, 3)': [(4, -1), (-1, 3), (3, 2), (3, 4), (2, 1), (1, 0)]}
Added position (4, 3) to solution: [(0, 0), (1, 2), (2, 4), (3, 1), (4, 3)]

=== Solution Found ===
Appending solution: [(0, 0), (1, 2), (2, 4), (3, 1), (4, 3)]

Attempting position (4, 4) in row 4
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}
Truncated solution list to: [(0, 0), (1, 2), (2, 4), (3, 1)]

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (3, 2) in row 3
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}
Truncated solution list to: [(0, 0), (1, 2), (2, 4)]

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (1, 3) in row 1
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]}
Truncated solution list to: [(0, 0)]

=== possible ===
Checking if position (1, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
Position (1, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 3)
Updated SolMap for pos (1, 3): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}
Added position (1, 3) to solution: [(0, 0), (1, 3)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 1)
Updated SolMap for pos (2, 1): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}
Added position (2, 1) to solution: [(0, 0), (1, 3), (2, 1)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 4)
Updated SolMap for pos (3, 4): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}
Added position (3, 4) to solution: [(0, 0), (1, 3), (2, 1), (3, 4)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 2)
Updated SolMap for pos (4, 2): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)], '(4, 2)': [(4, -1), (-1, 2), (3, 1), (3, 3), (2, 0), (2, 4)]}
Added position (4, 2) to solution: [(0, 0), (1, 3), (2, 1), (3, 4), (4, 2)]

=== Solution Found ===
Appending solution: [(0, 0), (1, 3), (2, 1), (3, 4), (4, 2)]

Attempting position (4, 3) in row 4
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}
Truncated solution list to: [(0, 0), (1, 3), (2, 1), (3, 4)]

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (2, 2) in row 2
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}
Truncated solution list to: [(0, 0), (1, 3)]

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (1, 4) in row 1
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]}
Truncated solution list to: [(0, 0)]

=== possible ===
Checking if position (1, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)]
Position (1, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 4)
Updated SolMap for pos (1, 4): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Added position (1, 4) to solution: [(0, 0), (1, 4)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 1)
Updated SolMap for pos (2, 1): {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}
Added position (2, 1) to solution: [(0, 0), (1, 4), (2, 1)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (2, 2) in row 2
Cleared columns from previous row: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Truncated solution list to: [(0, 0), (1, 4)]

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 0)': [(0, -1), (-1, 0), (1, 1), (2, 2), (3, 3), (4, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Cleared SolMap for new initial row: 0

Attempting position (0, 1) in row 0
Truncated solution list to: []

=== possible ===
Checking if position (0, 1) is possible
Current attack positions in SolMap: []
Position (0, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (0, 1)
Updated SolMap for pos (0, 1): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]}
Added position (0, 1) to solution: [(0, 1)]

Attempting position (1, 0) in row 1

=== possible ===
Checking if position (1, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]
Position (1, 0) is not possible
Skipping position (1, 0) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]}

Attempting position (1, 1) in row 1

=== possible ===
Checking if position (1, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]
Position (1, 1) is not possible
Skipping position (1, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]}

Attempting position (1, 2) in row 1

=== possible ===
Checking if position (1, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]
Position (1, 2) is not possible
Skipping position (1, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]}

Attempting position (1, 3) in row 1

=== possible ===
Checking if position (1, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]
Position (1, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 3)
Updated SolMap for pos (1, 3): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}
Added position (1, 3) to solution: [(0, 1), (1, 3)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 0)
Updated SolMap for pos (2, 0): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}
Added position (2, 0) to solution: [(0, 1), (1, 3), (2, 0)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 2)
Updated SolMap for pos (3, 2): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}
Added position (3, 2) to solution: [(0, 1), (1, 3), (2, 0), (3, 2)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 4)
Updated SolMap for pos (4, 4): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)], '(4, 4)': [(4, -1), (-1, 4), (3, 3), (2, 2), (1, 1), (0, 0)]}
Added position (4, 4) to solution: [(0, 1), (1, 3), (2, 0), (3, 2), (4, 4)]

=== Solution Found ===
Appending solution: [(0, 1), (1, 3), (2, 0), (3, 2), (4, 4)]

Attempting position (3, 3) in row 3
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}
Truncated solution list to: [(0, 1), (1, 3), (2, 0)]

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (2, 1) in row 2
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}
Truncated solution list to: [(0, 1), (1, 3)]

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 3)': [(1, -1), (-1, 3), (2, 4), (0, 2), (2, 2), (0, 4), (3, 1), (4, 0)]}

Attempting position (1, 4) in row 1
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]}
Truncated solution list to: [(0, 1)]

=== possible ===
Checking if position (1, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)]
Position (1, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 4)
Updated SolMap for pos (1, 4): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Added position (1, 4) to solution: [(0, 1), (1, 4)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 0)
Updated SolMap for pos (2, 0): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}
Added position (2, 0) to solution: [(0, 1), (1, 4), (2, 0)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 3)
Updated SolMap for pos (3, 3): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}
Added position (3, 3) to solution: [(0, 1), (1, 4), (2, 0), (3, 3)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (3, 4) in row 3
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}
Truncated solution list to: [(0, 1), (1, 4), (2, 0)]

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (2, 1) in row 2
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Truncated solution list to: [(0, 1), (1, 4)]

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 2)
Updated SolMap for pos (2, 2): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}
Added position (2, 2) to solution: [(0, 1), (1, 4), (2, 2)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 0)
Updated SolMap for pos (3, 0): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}
Added position (3, 0) to solution: [(0, 1), (1, 4), (2, 2), (3, 0)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 3)
Updated SolMap for pos (4, 3): {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)], '(4, 3)': [(4, -1), (-1, 3), (3, 2), (3, 4), (2, 1), (1, 0)]}
Added position (4, 3) to solution: [(0, 1), (1, 4), (2, 2), (3, 0), (4, 3)]

=== Solution Found ===
Appending solution: [(0, 1), (1, 4), (2, 2), (3, 0), (4, 3)]

Attempting position (4, 4) in row 4
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}
Truncated solution list to: [(0, 1), (1, 4), (2, 2), (3, 0)]

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (3, 1) in row 3
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}
Truncated solution list to: [(0, 1), (1, 4), (2, 2)]

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (2, 3) in row 2
Cleared columns from previous row: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Truncated solution list to: [(0, 1), (1, 4)]

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 1)': [(0, -1), (-1, 1), (1, 2), (1, 0), (2, 3), (3, 4)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Cleared SolMap for new initial row: 0

Attempting position (0, 2) in row 0
Truncated solution list to: []

=== possible ===
Checking if position (0, 2) is possible
Current attack positions in SolMap: []
Position (0, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (0, 2)
Updated SolMap for pos (0, 2): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]}
Added position (0, 2) to solution: [(0, 2)]

Attempting position (1, 0) in row 1

=== possible ===
Checking if position (1, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]
Position (1, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 0)
Updated SolMap for pos (1, 0): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}
Added position (1, 0) to solution: [(0, 2), (1, 0)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 3)
Updated SolMap for pos (2, 3): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}
Added position (2, 3) to solution: [(0, 2), (1, 0), (2, 3)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 1)
Updated SolMap for pos (3, 1): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}
Added position (3, 1) to solution: [(0, 2), (1, 0), (2, 3), (3, 1)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 4)
Updated SolMap for pos (4, 4): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)], '(4, 4)': [(4, -1), (-1, 4), (3, 3), (2, 2), (1, 1), (0, 0)]}
Added position (4, 4) to solution: [(0, 2), (1, 0), (2, 3), (3, 1), (4, 4)]

=== Solution Found ===
Appending solution: [(0, 2), (1, 0), (2, 3), (3, 1), (4, 4)]

Attempting position (3, 2) in row 3
Cleared columns from previous row: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}
Truncated solution list to: [(0, 2), (1, 0), (2, 3)]

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (2, 4) in row 2
Cleared columns from previous row: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}
Truncated solution list to: [(0, 2), (1, 0)]

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (1, 1) in row 1
Cleared columns from previous row: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]}
Truncated solution list to: [(0, 2)]

=== possible ===
Checking if position (1, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]
Position (1, 1) is not possible
Skipping position (1, 1) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]}

Attempting position (1, 2) in row 1

=== possible ===
Checking if position (1, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]
Position (1, 2) is not possible
Skipping position (1, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]}

Attempting position (1, 3) in row 1

=== possible ===
Checking if position (1, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]
Position (1, 3) is not possible
Skipping position (1, 3) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]}

Attempting position (1, 4) in row 1

=== possible ===
Checking if position (1, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)]
Position (1, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 4)
Updated SolMap for pos (1, 4): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Added position (1, 4) to solution: [(0, 2), (1, 4)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 1)
Updated SolMap for pos (2, 1): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}
Added position (2, 1) to solution: [(0, 2), (1, 4), (2, 1)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 3)
Updated SolMap for pos (3, 3): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}
Added position (3, 3) to solution: [(0, 2), (1, 4), (2, 1), (3, 3)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 0)
Updated SolMap for pos (4, 0): {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)], '(4, 0)': [(4, -1), (-1, 0), (3, 1), (2, 2), (1, 3), (0, 4)]}
Added position (4, 0) to solution: [(0, 2), (1, 4), (2, 1), (3, 3), (4, 0)]

=== Solution Found ===
Appending solution: [(0, 2), (1, 4), (2, 1), (3, 3), (4, 0)]

Attempting position (4, 1) in row 4
Cleared columns from previous row: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}
Truncated solution list to: [(0, 2), (1, 4), (2, 1), (3, 3)]

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (3, 4) in row 3
Cleared columns from previous row: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}
Truncated solution list to: [(0, 2), (1, 4), (2, 1)]

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1), (2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)], '(2, 1)': [(2, -1), (-1, 1), (3, 2), (1, 0), (3, 0), (1, 2), (4, 3), (0, 3)]}

Attempting position (2, 2) in row 2
Cleared columns from previous row: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}
Truncated solution list to: [(0, 2), (1, 4)]

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0), (1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 2)': [(0, -1), (-1, 2), (1, 3), (1, 1), (2, 4), (2, 0)], '(1, 4)': [(1, -1), (-1, 4), (0, 3), (2, 3), (3, 2), (4, 1)]}

Cleared SolMap for new initial row: 0

Attempting position (0, 3) in row 0
Truncated solution list to: []

=== possible ===
Checking if position (0, 3) is possible
Current attack positions in SolMap: []
Position (0, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (0, 3)
Updated SolMap for pos (0, 3): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]}
Added position (0, 3) to solution: [(0, 3)]

Attempting position (1, 0) in row 1

=== possible ===
Checking if position (1, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]
Position (1, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 0)
Updated SolMap for pos (1, 0): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}
Added position (1, 0) to solution: [(0, 3), (1, 0)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 2)
Updated SolMap for pos (2, 2): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}
Added position (2, 2) to solution: [(0, 3), (1, 0), (2, 2)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)]
Position (3, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 4)
Updated SolMap for pos (3, 4): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}
Added position (3, 4) to solution: [(0, 3), (1, 0), (2, 2), (3, 4)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 1)
Updated SolMap for pos (4, 1): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)], '(4, 1)': [(4, -1), (-1, 1), (3, 0), (3, 2), (2, 3), (1, 4)]}
Added position (4, 1) to solution: [(0, 3), (1, 0), (2, 2), (3, 4), (4, 1)]

=== Solution Found ===
Appending solution: [(0, 3), (1, 0), (2, 2), (3, 4), (4, 1)]

Attempting position (4, 2) in row 4
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}
Truncated solution list to: [(0, 3), (1, 0), (2, 2), (3, 4)]

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4), (3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 2)': [(2, -1), (-1, 2), (3, 3), (1, 1), (3, 1), (1, 3), (4, 4), (0, 0), (4, 0), (0, 4)], '(3, 4)': [(3, -1), (-1, 4), (2, 3), (4, 3), (1, 2), (0, 1)]}

Attempting position (2, 3) in row 2
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}
Truncated solution list to: [(0, 3), (1, 0)]

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 4)
Updated SolMap for pos (2, 4): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}
Added position (2, 4) to solution: [(0, 3), (1, 0), (2, 4)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 1)
Updated SolMap for pos (3, 1): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}
Added position (3, 1) to solution: [(0, 3), (1, 0), (2, 4), (3, 1)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 1)': [(3, -1), (-1, 1), (4, 2), (2, 0), (4, 0), (2, 2), (1, 3), (0, 4)]}

Attempting position (3, 2) in row 3
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}
Truncated solution list to: [(0, 3), (1, 0), (2, 4)]

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (1, 1) in row 1
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]}
Truncated solution list to: [(0, 3)]

=== possible ===
Checking if position (1, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]
Position (1, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 1)
Updated SolMap for pos (1, 1): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}
Added position (1, 1) to solution: [(0, 3), (1, 1)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 4)
Updated SolMap for pos (2, 4): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}
Added position (2, 4) to solution: [(0, 3), (1, 1), (2, 4)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 2)
Updated SolMap for pos (3, 2): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}
Added position (3, 2) to solution: [(0, 3), (1, 1), (2, 4), (3, 2)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 0)
Updated SolMap for pos (4, 0): {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)], '(4, 0)': [(4, -1), (-1, 0), (3, 1), (2, 2), (1, 3), (0, 4)]}
Added position (4, 0) to solution: [(0, 3), (1, 1), (2, 4), (3, 2), (4, 0)]

=== Solution Found ===
Appending solution: [(0, 3), (1, 1), (2, 4), (3, 2), (4, 0)]

Attempting position (4, 1) in row 4
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}
Truncated solution list to: [(0, 3), (1, 1), (2, 4), (3, 2)]

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2), (3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)], '(3, 2)': [(3, -1), (-1, 2), (4, 3), (2, 1), (4, 1), (2, 3), (1, 0), (1, 4)]}

Attempting position (3, 3) in row 3
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}
Truncated solution list to: [(0, 3), (1, 1), (2, 4)]

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 4)': [(2, -1), (-1, 4), (1, 3), (3, 3), (0, 2), (4, 2)]}

Attempting position (1, 2) in row 1
Cleared columns from previous row: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]}
Truncated solution list to: [(0, 3)]

=== possible ===
Checking if position (1, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]
Position (1, 2) is not possible
Skipping position (1, 2) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]}

Attempting position (1, 3) in row 1

=== possible ===
Checking if position (1, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]
Position (1, 3) is not possible
Skipping position (1, 3) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]}

Attempting position (1, 4) in row 1

=== possible ===
Checking if position (1, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]
Position (1, 4) is not possible
Skipping position (1, 4) as it is under attack
Updated SolMap after skip: {'(0, 3)': [(0, -1), (-1, 3), (1, 4), (1, 2), (2, 1), (3, 0)]}

Cleared SolMap for new initial row: 0

Attempting position (0, 4) in row 0
Truncated solution list to: []

=== possible ===
Checking if position (0, 4) is possible
Current attack positions in SolMap: []
Position (0, 4) is possible

=== possible_sols ===
Adding attack positions for pos: (0, 4)
Updated SolMap for pos (0, 4): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]}
Added position (0, 4) to solution: [(0, 4)]

Attempting position (1, 0) in row 1

=== possible ===
Checking if position (1, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]
Position (1, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 0)
Updated SolMap for pos (1, 0): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}
Added position (1, 0) to solution: [(0, 4), (1, 0)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 3)
Updated SolMap for pos (2, 3): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}
Added position (2, 3) to solution: [(0, 4), (1, 0), (2, 3)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (2, 4) in row 2
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}
Truncated solution list to: [(0, 4), (1, 0)]

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 0)': [(1, -1), (-1, 0), (2, 1), (0, 1), (3, 2), (4, 3)]}

Attempting position (1, 1) in row 1
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]}
Truncated solution list to: [(0, 4)]

=== possible ===
Checking if position (1, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]
Position (1, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 1)
Updated SolMap for pos (1, 1): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}
Added position (1, 1) to solution: [(0, 4), (1, 1)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 0) is not possible
Skipping position (2, 0) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 1) in row 2

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 3)
Updated SolMap for pos (2, 3): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}
Added position (2, 3) to solution: [(0, 4), (1, 1), (2, 3)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 0)
Updated SolMap for pos (3, 0): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}
Added position (3, 0) to solution: [(0, 4), (1, 1), (2, 3), (3, 0)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 1) is not possible
Skipping position (4, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (4, 2) in row 4

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 2)
Updated SolMap for pos (4, 2): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)], '(4, 2)': [(4, -1), (-1, 2), (3, 1), (3, 3), (2, 0), (2, 4)]}
Added position (4, 2) to solution: [(0, 4), (1, 1), (2, 3), (3, 0), (4, 2)]

=== Solution Found ===
Appending solution: [(0, 4), (1, 1), (2, 3), (3, 0), (4, 2)]

Attempting position (4, 3) in row 4
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}
Truncated solution list to: [(0, 4), (1, 1), (2, 3), (3, 0)]

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1), (3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)], '(3, 0)': [(3, -1), (-1, 0), (4, 1), (2, 1), (1, 2), (0, 3)]}

Attempting position (3, 1) in row 3
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}
Truncated solution list to: [(0, 4), (1, 1), (2, 3)]

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 3) is not possible
Skipping position (3, 3) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (3, 4) in row 3

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4), (2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)], '(2, 3)': [(2, -1), (-1, 3), (3, 4), (1, 2), (3, 2), (1, 4), (0, 1), (4, 1)]}

Attempting position (2, 4) in row 2
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}
Truncated solution list to: [(0, 4), (1, 1)]

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 1)': [(1, -1), (-1, 1), (2, 2), (0, 0), (2, 0), (0, 2), (3, 3), (4, 4)]}

Attempting position (1, 2) in row 1
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]}
Truncated solution list to: [(0, 4)]

=== possible ===
Checking if position (1, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]
Position (1, 2) is possible

=== possible_sols ===
Adding attack positions for pos: (1, 2)
Updated SolMap for pos (1, 2): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}
Added position (1, 2) to solution: [(0, 4), (1, 2)]

Attempting position (2, 0) in row 2

=== possible ===
Checking if position (2, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 0) is possible

=== possible_sols ===
Adding attack positions for pos: (2, 0)
Updated SolMap for pos (2, 0): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}
Added position (2, 0) to solution: [(0, 4), (1, 2), (2, 0)]

Attempting position (3, 0) in row 3

=== possible ===
Checking if position (3, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 0) is not possible
Skipping position (3, 0) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 1) in row 3

=== possible ===
Checking if position (3, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 1) is not possible
Skipping position (3, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 2) in row 3

=== possible ===
Checking if position (3, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 2) is not possible
Skipping position (3, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (3, 3) in row 3

=== possible ===
Checking if position (3, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 3) is possible

=== possible_sols ===
Adding attack positions for pos: (3, 3)
Updated SolMap for pos (3, 3): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}
Added position (3, 3) to solution: [(0, 4), (1, 2), (2, 0), (3, 3)]

Attempting position (4, 0) in row 4

=== possible ===
Checking if position (4, 0) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 0) is not possible
Skipping position (4, 0) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 1) in row 4

=== possible ===
Checking if position (4, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 1) is possible

=== possible_sols ===
Adding attack positions for pos: (4, 1)
Updated SolMap for pos (4, 1): {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)], '(4, 1)': [(4, -1), (-1, 1), (3, 0), (3, 2), (2, 3), (1, 4)]}
Added position (4, 1) to solution: [(0, 4), (1, 2), (2, 0), (3, 3), (4, 1)]

=== Solution Found ===
Appending solution: [(0, 4), (1, 2), (2, 0), (3, 3), (4, 1)]

Attempting position (4, 2) in row 4
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}
Truncated solution list to: [(0, 4), (1, 2), (2, 0), (3, 3)]

=== possible ===
Checking if position (4, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 2) is not possible
Skipping position (4, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 3) in row 4

=== possible ===
Checking if position (4, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 3) is not possible
Skipping position (4, 3) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (4, 4) in row 4

=== possible ===
Checking if position (4, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2), (3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]
Position (4, 4) is not possible
Skipping position (4, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)], '(3, 3)': [(3, -1), (-1, 3), (4, 4), (2, 2), (4, 2), (2, 4), (1, 1), (0, 0)]}

Attempting position (3, 4) in row 3
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}
Truncated solution list to: [(0, 4), (1, 2), (2, 0)]

=== possible ===
Checking if position (3, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0), (2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]
Position (3, 4) is not possible
Skipping position (3, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)], '(2, 0)': [(2, -1), (-1, 0), (3, 1), (1, 1), (4, 2), (0, 2)]}

Attempting position (2, 1) in row 2
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}
Truncated solution list to: [(0, 4), (1, 2)]

=== possible ===
Checking if position (2, 1) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 1) is not possible
Skipping position (2, 1) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 2) in row 2

=== possible ===
Checking if position (2, 2) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 2) is not possible
Skipping position (2, 2) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 3) in row 2

=== possible ===
Checking if position (2, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 3) is not possible
Skipping position (2, 3) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (2, 4) in row 2

=== possible ===
Checking if position (2, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0), (1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]
Position (2, 4) is not possible
Skipping position (2, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)], '(1, 2)': [(1, -1), (-1, 2), (2, 3), (0, 1), (2, 1), (0, 3), (3, 4), (3, 0)]}

Attempting position (1, 3) in row 1
Cleared columns from previous row: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]}
Truncated solution list to: [(0, 4)]

=== possible ===
Checking if position (1, 3) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]
Position (1, 3) is not possible
Skipping position (1, 3) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]}

Attempting position (1, 4) in row 1

=== possible ===
Checking if position (1, 4) is possible
Current attack positions in SolMap: [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]
Position (1, 4) is not possible
Skipping position (1, 4) as it is under attack
Updated SolMap after skip: {'(0, 4)': [(0, -1), (-1, 4), (1, 3), (2, 2), (3, 1), (4, 0)]}

All solutions:
[(0, 0), (1, 2), (2, 4), (3, 1), (4, 3)]
[(0, 0), (1, 3), (2, 1), (3, 4), (4, 2)]
[(0, 1), (1, 3), (2, 0), (3, 2), (4, 4)]
[(0, 1), (1, 4), (2, 2), (3, 0), (4, 3)]
[(0, 2), (1, 0), (2, 3), (3, 1), (4, 4)]
[(0, 2), (1, 4), (2, 1), (3, 3), (4, 0)]
[(0, 3), (1, 0), (2, 2), (3, 4), (4, 1)]
[(0, 3), (1, 1), (2, 4), (3, 2), (4, 0)]
[(0, 4), (1, 1), (2, 3), (3, 0), (4, 2)]
[(0, 4), (1, 2), (2, 0), (3, 3), (4, 1)]
